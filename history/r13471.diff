Index: collective.solr/trunk/collective/solr/tests/test_parser.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_parser.py	(revision 13470)
+++ collective.solr/trunk/collective/solr/tests/test_parser.py	(revision 13471)
@@ -86,19 +86,19 @@
         self.assertEqual(len(schema), 17) # 17 fields defined in schema.xml
         self.assertEqual(schema['id'].type, 'string')
         self.assertEqual(schema['id'].class_, 'solr.StrField')
-        self.assertEqual(schema['id'].required, 'true')
-        self.assertEqual(schema['id'].omitNorms, 'true')
+        self.assertEqual(schema['id'].required, True)
+        self.assertEqual(schema['id'].omitNorms, True)
         self.assertEqual(schema['cat'].class_, 'solr.TextField')
-        self.assertEqual(schema['cat'].multiValued, 'true')        
-        self.assertEqual(schema['cat'].termVectors, 'true')        
+        self.assertEqual(schema['cat'].multiValued, True)
+        self.assertEqual(schema['cat'].termVectors, True)
         self.assertEqual(schema['sku'].positionIncrementGap, '100')
-        self.assertEqual(schema.features.multiValued, 'true')
+        self.assertEqual(schema.features.multiValued, True)
         self.assertEqual(schema.weight.class_, 'solr.SortableFloatField')
         self.assertEqual(schema.popularity.class_, 'solr.SortableIntField')
         self.assertEqual(schema.inStock.class_, 'solr.BoolField')
         self.assertEqual(schema.timestamp.class_, 'solr.DateField')
         self.assertEqual(schema.timestamp.default, 'NOW')
-        self.assertEqual(schema.timestamp.multiValued, 'false')
+        self.assertEqual(schema.timestamp.multiValued, False)
 
 
 def test_suite():
Index: collective.solr/trunk/collective/solr/parser.py
===================================================================
--- collective.solr/trunk/collective/solr/parser.py	(revision 13470)
+++ collective.solr/trunk/collective/solr/parser.py	(revision 13471)
@@ -116,5 +116,8 @@
                 field = SolrField(types[elem.get('type')])
                 field.update(elem.attrib)
                 field['class_'] = field['class']    # `.class` will not work
+                for key, value in field.items():    # convert to `bool`s
+                    if value in ('true', 'false'):
+                        field[key] = value == 'true'
                 self[name] = field
 
