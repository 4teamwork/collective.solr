Index: collective.solr/trunk/collective/solr/indexer.py
===================================================================
--- collective.solr/trunk/collective/solr/indexer.py	(revision 13544)
+++ collective.solr/trunk/collective/solr/indexer.py	(revision 13545)
@@ -23,29 +23,37 @@
     """ a queue processor for solr """
     implements(ISolrIndexQueueProcessor)
 
+    host = None
+    port = None
     connection = None
     schema = None
 
     def index(self, obj, attributes=None):
-        data = self.getData(obj, attributes)
-        self.prepareData(data)
-        self.getConnection().add(**data)
+        conn = self.getConnection()
+        if conn is not None:
+            data = self.getData(obj, attributes)
+            self.prepareData(data)
+            conn.add(**data)
 
     def reindex(self, obj, attributes=None):
         self.index(obj, attributes)
 
     def unindex(self, obj):
-        data = self.getData(obj, attributes=['id'])
-        self.prepareData(data)
-        # TODO: perhaps we should consider <uniqueKey> here
-        assert data.has_key('id'), "no id in object data"
-        self.getConnection().delete(id=data['id'])
+        conn = self.getConnection()
+        if conn is not None:
+            data = self.getData(obj, attributes=['id'])
+            self.prepareData(data)
+            # TODO: perhaps we should consider <uniqueKey> here
+            assert data.has_key('id'), "no id in object data"
+            conn.delete(id=data['id'])
 
     def begin(self):
         pass
 
     def commit(self):
-        self.getConnection().commit()
+        conn = self.getConnection()
+        if conn is not None:
+            conn.commit()
 
     # helper methods
 
@@ -85,7 +93,7 @@
 
     def getConnection(self):
         """ returns an existing connection (and schema) or opens one """
-        if self.connection is None:
+        if self.connection is None and self.host is not None:
             host = '%s:%d' % (self.host, self.port)
             self.connection = SolrConnection(host=host, solrBase=self.base, persistent=True)
             self.schema = None
@@ -95,6 +103,8 @@
         """ returns the currently used schema of fetches it;
             TODO: move schema handling (multi-value etc) into `SolrConnection` """
         if self.schema is None:
-            self.schema = self.getConnection().getSchema()
+            conn = self.getConnection()
+            if conn is not None:
+                self.schema = conn.getSchema()
         return self.schema
 
