Index: collective.solr/trunk/collective/solr/parser.py
===================================================================
--- collective.solr/trunk/collective/solr/parser.py	(revision 13439)
+++ collective.solr/trunk/collective/solr/parser.py	(revision 13440)
@@ -9,8 +9,11 @@
 
 # unmarshallers for basic types
 unmarshallers = {
+    'null': lambda x: None,
     'int': int,
     'float': float,
+    'double': float,
+    'long': long,
     'bool': lambda x: x == 'true',
     'str': lambda x: x or '',
     'date': DateTime,
@@ -72,7 +75,7 @@
         return self.get('response',[])
 
 class Result(list):
-    def __init__(self, name, numFound, start):
+    def __init__(self, name, numFound, start, maxScore):
         self.name = name
         self.numFound = int(numFound)
         self.start = int(start)
@@ -106,7 +109,7 @@
     stack.append(lst)
 
 def handle_start_result(elem, stack):
-    result = Result(elem.get('name',None), elem.get('numFound',None), elem.get('start',None))
+    result = Result(elem.get('name',None), elem.get('numFound',None), elem.get('start',None), elem.get('maxScore',None))
     add_node(result, elem, stack)
     stack.append(result)
 
@@ -136,8 +139,11 @@
     ('end'  ,'result'):   pop_stack,
     ('start','doc'):      handle_start_doc,
     ('end'  ,'doc'):      pop_stack,
+    ('end'  ,'null'):     handle_literal(lambda x: None),
     ('end'  ,'int'):      handle_literal(int),
     ('end'  ,'float'):    handle_literal(float),
+    ('end'  ,'double'):   handle_literal(float),
+    ('end'  ,'long'):     handle_literal(long),
     ('end'  ,'bool'):     handle_literal(lambda x: x == 'true'),
     ('end'  ,'str'):      handle_literal(lambda x: x or ''),
     ('end'  ,'date'):     handle_literal(DateTime),
