Index: collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py	(revision 0)
+++ collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py	(revision 13459)
@@ -0,0 +1,65 @@
+from unittest import TestSuite, makeSuite, main
+
+from zope.component import adapts, getMultiAdapter
+from zope.component import provideUtility
+from transaction import savepoint, commit, abort
+
+from Products.Five import zcml
+from Products.Five import fiveconfigure
+from Products.PloneTestCase import PloneTestCase as ptc
+from Products.PloneTestCase.layer import PloneSite
+from Products.PloneTestCase.layer import onsetup
+
+import collective.solr
+from collective.solr.indexablewrapper import ISolrIndexableObjectWrapper
+from collective.solr.indexablewrapper import SolrExtensibleIndexableObjectWrapper
+
+
+
+@onsetup
+def setup_product():
+    """Set up additional products and ZCML required to test this product.
+    
+    The @onsetup decorator causes the execution of this body to be deferred
+    until the setup of the Plone site testing layer.
+    """
+    # Load the ZCML configuration for this package and its dependencies
+    fiveconfigure.debug_mode = True
+    zcml.load_config('configure.zcml',
+                     collective.solr)
+    fiveconfigure.debug_mode = False
+
+    # We need to tell the testing framework that these products
+    # should be available. This can't happen until after we have loaded
+    # the ZCML.
+    #ptc.installPackage('collective.solr')
+    fiveconfigure.debug_mode = False
+
+
+# The order here is important: We first call the deferred function and then 
+# let PloneTestCase install it during Plone site setup
+setup_product()
+ptc.setupPloneSite()
+
+
+
+class TestCase(ptc.PloneTestCase):
+    pass
+
+class IndexableWrapperTests(TestCase):
+
+    def testAddObject(self):
+        wr = getMultiAdapter((self.folder,self.portal), ISolrIndexableObjectWrapper)
+        self.failUnless(wr)
+        # We are currently only overriding allowedRolesAndUsers
+        self.failUnlessEqual(wr.allowedRolesAndUsers(),
+                            ['user$test_user_1_', 'user$portal_owner', 'Contributor', 'Manager', 'Editor', 'Reader'])
+
+
+def test_suite():
+    return TestSuite([
+        makeSuite(IndexableWrapperTests),
+    ])
+
+if __name__ == '__main__':
+    main(defaultTest='test_suite')

Property changes on: collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py
___________________________________________________________________
Name: svn:eol-style
   + native

Index: collective.solr/trunk/collective/solr/indexablewrapper.py
===================================================================
--- collective.solr/trunk/collective/solr/indexablewrapper.py	(revision 0)
+++ collective.solr/trunk/collective/solr/indexablewrapper.py	(revision 13459)
@@ -0,0 +1,21 @@
+from zope.interface import Interface, implements, providedBy
+from zope.component import adapts, getMultiAdapter
+
+from plone.app.content.interfaces import IIndexableObjectWrapper
+from Products.CMFCore.interfaces import ISiteRoot
+from Products.CMFPlone.CatalogTool import ExtensibleIndexableObjectWrapper
+
+class ISolrIndexableObjectWrapper(IIndexableObjectWrapper):
+    """Interface to look up Solr wrapper, needed to modify
+    data specific to Solr, like $ instead of : in allowedRolesAndUsers"""
+
+class SolrExtensibleIndexableObjectWrapper(ExtensibleIndexableObjectWrapper):
+    """Override allowedRolesAndUsers"""
+    implements(ISolrIndexableObjectWrapper)
+    adapts(Interface, ISiteRoot)
+
+    def allowedRolesAndUsers(self):
+        # Disable CMFCore version of this method; use registry hook instead
+        res = self.__getattr__('allowedRolesAndUsers')
+        res = [r.replace(':','$') for r in res]
+        return res

Property changes on: collective.solr/trunk/collective/solr/indexablewrapper.py
___________________________________________________________________
Name: svn:eol-style
   + native

Index: collective.solr/trunk/collective/solr/configure.zcml
===================================================================
--- collective.solr/trunk/collective/solr/configure.zcml	(revision 13458)
+++ collective.solr/trunk/collective/solr/configure.zcml	(revision 13459)
@@ -3,5 +3,10 @@
     xmlns:five="http://namespaces.zope.org/five"
     i18n_domain="collective.solr">
 
+  <!-- Default wrapper for indexing -->
+  <adapter
+      for="* Products.CMFCore.interfaces.ISiteRoot"
+      provides="collective.solr.indexablewrapper.ISolrIndexableObjectWrapper"
+      factory=".indexablewrapper.SolrExtensibleIndexableObjectWrapper" />
 
 </configure>
