Index: collective.solr/trunk/collective/solr/indexer.py
===================================================================
--- collective.solr/trunk/collective/solr/indexer.py	(revision 13551)
+++ collective.solr/trunk/collective/solr/indexer.py	(revision 13552)
@@ -1,9 +1,12 @@
 from zope.interface import implements
 from persistent import Persistent
 from DateTime import DateTime
+from logging import getLogger
 
 from collective.solr.interfaces import ISolrIndexQueueProcessor
-from collective.solr.solr import SolrConnection
+from collective.solr.solr import SolrConnection, SolrException
+
+logger = getLogger('collective.solr.indexer')
 
 
 def datehandler(value):
@@ -33,7 +36,10 @@
         if conn is not None:
             data = self.getData(obj, attributes)
             self.prepareData(data)
-            conn.add(**data)
+            try:
+                conn.add(**data)
+            except SolrException, e:
+                logger.exception('exception during index')
 
     def reindex(self, obj, attributes=None):
         self.index(obj, attributes)
@@ -45,7 +51,10 @@
             self.prepareData(data)
             # TODO: perhaps we should consider <uniqueKey> here
             assert data.has_key('id'), "no id in object data"
-            conn.delete(id=data['id'])
+            try:
+                conn.delete(id=data['id'])
+            except SolrException, e:
+                logger.exception('exception during delete')
 
     def begin(self):
         pass
@@ -53,7 +62,10 @@
     def commit(self):
         conn = self.getConnection()
         if conn is not None:
-            conn.commit()
+            try:
+                conn.commit()
+            except SolrException, e:
+                logger.exception('exception during commit')
 
     # helper methods
 
@@ -76,7 +88,7 @@
 
     def prepareData(self, data):
         """ modify data according to solr specifics, i.e. replace ':' by '$'
-            for "allowedRolesAndUsers" etc """ 
+            for "allowedRolesAndUsers" etc """
         allowed = data.get('allowedRolesAndUsers', None)
         if allowed is not None:
             data['allowedRolesAndUsers'] = [r.replace(':','$') for r in allowed]
