Index: collective.solr/trunk/collective/solr/parser.py
===================================================================
--- collective.solr/trunk/collective/solr/parser.py	(revision 13424)
+++ collective.solr/trunk/collective/solr/parser.py	(revision 13425)
@@ -5,6 +5,7 @@
 
 unmarshallers = {
     'int': lambda x: int(x.text),
+    'float': lambda x: float(x.text),
     'bool': lambda x: x.text == 'true',
     'str': lambda x: x.text or '',
     'date': lambda x: DateTime(x.text),
@@ -20,18 +21,29 @@
 
     results = None
     flare = None
+    array = None
 
-    for action, elem in iterparse(StringIO(data), events=('start',)):
-        if elem.tag == 'result':
-            results = []
-        elif elem.tag == 'doc':
-            flare = Flare()
-            results.append(flare)
-        elif flare is not None:
-            unmarshal = unmarshallers.get(elem.tag)
-            if unmarshal is not None:
-                if flare is not None:
-                    data = unmarshal(elem)
-                    setattr(flare, elem.get('name'), data)
+    for action, elem in iterparse(StringIO(data), events=('start', 'end')):
+        if action == 'start':
+            if elem.tag == 'result':    # start result set, set up list...
+                results = []
+            elif elem.tag == 'doc':     # start of result, create brain...
+                flare = Flare()
+                results.append(flare)
+            elif flare is not None:
+                if elem.tag == 'arr':   # start of array, set it up...
+                    array = []
+                    setattr(flare, elem.get('name'), array)
+                else:
+                    unmarshal = unmarshallers.get(elem.tag)
+                    if unmarshal is not None:   # known type?
+                        data = unmarshal(elem)
+                        if array is not None:   # array element
+                            array.append(data)
+                        else:                   # regular attribute
+                            setattr(flare, elem.get('name'), data)
+        elif action == 'end':
+            if elem.tag == 'arr':   # end of array, "close" it
+                array = None
     return results
 
Index: collective.solr/trunk/collective/solr/tests.py
===================================================================
--- collective.solr/trunk/collective/solr/tests.py	(revision 13424)
+++ collective.solr/trunk/collective/solr/tests.py	(revision 13425)
@@ -303,6 +303,17 @@
 
     def testParseComplexSearchResults(self):
         results = parseResults(COMPLEX_XML_RESPONSE)
+        self.assertEqual(len(results), 2)
+        first = results[0]
+        self.assertEqual(first.cat, ['software', 'search'])
+        self.assertEqual(len(first.features), 7)
+        self.assertEqual([type(x).__name__ for x in first.features], ['str'] * 6 + ['unicode'])
+        self.assertEqual(first.id, 'SOLR1000')
+        self.assertEqual(first.inStock, True)
+        self.assertEqual(first.incubationdate_dt, DateTime('2006/01/17 GMT'))
+        self.assertEqual(first.manu, 'Apache Software Foundation')
+        self.assertEqual(first.popularity, 10)
+        self.assertEqual(first.price, 0.0)
 
     def testParseFacetSearchResults(self):
         results = parseResults(FACET_XML_RESPONSE)
