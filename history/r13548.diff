Index: collective.solr/trunk/collective/solr/tests/data/plone_schema.xml
===================================================================
--- collective.solr/trunk/collective/solr/tests/data/plone_schema.xml	(revision 13547)
+++ collective.solr/trunk/collective/solr/tests/data/plone_schema.xml	(revision 13548)
@@ -10,7 +10,7 @@
  </types>
  <fields>
    <field name="id" type="string" indexed="true" stored="true" required="true"/> 
-   <field name="title" type="string" indexed="true" stored="true"/>
+   <field name="Title" type="string" indexed="true" stored="true"/>
  </fields>
  <uniqueKey>id</uniqueKey>
 </schema>
\ No newline at end of file
Index: collective.solr/trunk/collective/solr/tests/test_integration.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_integration.py	(revision 13547)
+++ collective.solr/trunk/collective/solr/tests/test_integration.py	(revision 13548)
@@ -62,16 +62,12 @@
         output = []
         connection = self.setupProcessor()
         response = getData('add_response.txt')
-        fakehttp(connection, response, output)      # fake add response
-        self.folder.processForm({'title': 'Foo'})   # updating sends data
+        fakehttp(connection, response, output)              # fake add response
+        self.folder.processForm(values={'title': 'Foo'})    # updating sends data
+        self.assertEqual(self.folder.Title(), 'Foo')
         output = ''.join(output).replace('\r', '')
-        # TODO: collective.solr still needs to be changed to put the actual
-        # objects into the queue instead of the UIDs (which will make things
-        # clearer anyway), so for now we check for the UID... and also only
-        # for it's lower-case version, since this is mangled somewhere on
-        # the way... %)
-        required = '<field name="title">%s</field>' % self.folder.UID()
-        self.assert_(output.lower().find(required.lower()) > 0, '"title" data not found')
+        required = '<field name="Title">Foo</field>'
+        self.assert_(output.find(required) > 0, '"title" data not found')
 
 
 def test_suite():
