Index: collective.solr/trunk/collective/solr/tests/test_parser.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_parser.py	(revision 13466)
+++ collective.solr/trunk/collective/solr/tests/test_parser.py	(revision 13467)
@@ -85,23 +85,20 @@
         schema = SolrSchema(getData('schema.xml'))
         fields = schema.fields
         self.assertEqual(len(fields), 17) # 17 fields defined in schema.xml
-        self.assertEqual(fields['id']['type'], 'string')
-        self.assertEqual(fields['id']['class'], 'solr.StrField')
-        self.assertEqual(fields['id']['required'], 'true')
-        self.assertEqual(fields['id']['omitNorms'], 'true')
-        self.assertEqual(fields['id'].required, 'true')     # attribute access...
+        self.assertEqual(fields['id'].type, 'string')
+        self.assertEqual(fields['id'].class_, 'solr.StrField')
+        self.assertEqual(fields['id'].required, 'true')
         self.assertEqual(fields['id'].omitNorms, 'true')
-        self.assertEqual(fields['cat']['class'], 'solr.TextField')
-        self.assertEqual(fields['cat']['multiValued'], 'true')
+        self.assertEqual(fields['cat'].class_, 'solr.TextField')
         self.assertEqual(fields['cat'].multiValued, 'true')        
         self.assertEqual(fields['sku'].positionIncrementGap, '100')
         self.assertEqual(fields['cat'].multiValued, 'true')
         self.assertEqual(fields['cat'].termVectors, 'true')        
         self.assertEqual(fields['features'].multiValued, 'true')
-        self.assertEqual(fields['weight']['class'], 'solr.SortableFloatField')
-        self.assertEqual(fields['popularity']['class'], 'solr.SortableIntField')
-        self.assertEqual(fields['inStock']['class'], 'solr.BoolField')
-        self.assertEqual(fields['timestamp']['class'], 'solr.DateField')
+        self.assertEqual(fields['weight'].class_, 'solr.SortableFloatField')
+        self.assertEqual(fields['popularity'].class_, 'solr.SortableIntField')
+        self.assertEqual(fields['inStock'].class_, 'solr.BoolField')
+        self.assertEqual(fields['timestamp'].class_, 'solr.DateField')
         self.assertEqual(fields['timestamp'].default, 'NOW')
         self.assertEqual(fields['timestamp'].multiValued, 'false')
 
Index: collective.solr/trunk/collective/solr/parser.py
===================================================================
--- collective.solr/trunk/collective/solr/parser.py	(revision 13466)
+++ collective.solr/trunk/collective/solr/parser.py	(revision 13467)
@@ -114,6 +114,8 @@
             if elem.tag == 'fieldType':
                 types[name] = elem.attrib
             elif elem.tag == 'field':
-                fields[name] = SolrField(types[elem.get('type')])
-                fields[name].update(elem.attrib)
+                field = SolrField(types[elem.get('type')])
+                field.update(elem.attrib)
+                field['class_'] = field['class']    # `.class` will not work
+                fields[name] = field
 
