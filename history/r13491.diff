Index: collective.solr/trunk/collective/solr/indexablewrapper.py
===================================================================
--- collective.solr/trunk/collective/solr/indexablewrapper.py	(revision 13490)
+++ collective.solr/trunk/collective/solr/indexablewrapper.py	(revision 13491)
@@ -1,24 +0,0 @@
-from zope.interface import Interface, implements
-from zope.component import adapts
-
-from plone.app.content.interfaces import IIndexableObjectWrapper
-from Products.CMFCore.interfaces import ISiteRoot
-from Products.CMFPlone.CatalogTool import ExtensibleIndexableObjectWrapper
-
-
-class ISolrIndexableObjectWrapper(IIndexableObjectWrapper):
-    """Interface to look up Solr wrapper, needed to modify
-    data specific to Solr, like $ instead of : in allowedRolesAndUsers"""
-
-
-class SolrExtensibleIndexableObjectWrapper(ExtensibleIndexableObjectWrapper):
-    """Override allowedRolesAndUsers"""
-    implements(ISolrIndexableObjectWrapper)
-    adapts(Interface, ISiteRoot)
-
-    def allowedRolesAndUsers(self):
-        # Disable CMFCore version of this method; use registry hook instead
-        res = self.__getattr__('allowedRolesAndUsers')
-        res = [r.replace(':','$') for r in res]
-        return res
-
Index: collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py	(revision 13490)
+++ collective.solr/trunk/collective/solr/tests/test_indexablewrapper.py	(revision 13491)
@@ -1,16 +1,12 @@
 from unittest import TestSuite, makeSuite, main
 
-from zope.component import getMultiAdapter
-
 from Products.Five import zcml
 from Products.Five import fiveconfigure
 from Products.PloneTestCase import PloneTestCase as ptc
 from Products.PloneTestCase.layer import onsetup
 
 import collective.solr
-from collective.solr.indexablewrapper import ISolrIndexableObjectWrapper
 from collective.solr.indexer import SolrIndexQueueProcessor
-from collective.solr.solr import SolrConnection
 from collective.solr.tests.test_solr import fakehttp
 from collective.solr.tests.utils import getData
 
@@ -46,12 +42,10 @@
 
 class IndexableWrapperTests(TestCase):
 
-    def testAddObject(self):
-        wr = getMultiAdapter((self.folder,self.portal), ISolrIndexableObjectWrapper)
-        self.failUnless(wr)
-        # We are currently only overriding allowedRolesAndUsers
-        self.failUnlessEqual(wr.allowedRolesAndUsers(),
-                            ['user$test_user_1_', 'user$portal_owner', 'Contributor', 'Manager', 'Editor', 'Reader'])
+    def testPrepareData(self):
+        data = {'allowedRolesAndUsers': ['user:test_user_1_', 'user:portal_owner']}
+        SolrIndexQueueProcessor().prepareData(data)
+        self.assertEqual(data, {'allowedRolesAndUsers': ['user$test_user_1_', 'user$portal_owner']})
 
     def testIndexObject(self):
         proc = SolrIndexQueueProcessor()
Index: collective.solr/trunk/collective/solr/configure.zcml
===================================================================
--- collective.solr/trunk/collective/solr/configure.zcml	(revision 13490)
+++ collective.solr/trunk/collective/solr/configure.zcml	(revision 13491)
@@ -3,10 +3,5 @@
     xmlns:five="http://namespaces.zope.org/five"
     i18n_domain="collective.solr">
 
-  <!-- Default wrapper for indexing -->
-  <adapter
-      for="* Products.CMFCore.interfaces.ISiteRoot"
-      provides="collective.solr.indexablewrapper.ISolrIndexableObjectWrapper"
-      factory=".indexablewrapper.SolrExtensibleIndexableObjectWrapper" />
 
 </configure>
Index: collective.solr/trunk/collective/solr/indexer.py
===================================================================
--- collective.solr/trunk/collective/solr/indexer.py	(revision 13490)
+++ collective.solr/trunk/collective/solr/indexer.py	(revision 13491)
@@ -1,12 +1,9 @@
 from zope.interface import implements
-from zope.component import getMultiAdapter
 from persistent import Persistent
-from Products.CMFCore.utils import getToolByName
 from DateTime import DateTime
 
 from collective.solr.interfaces import ISolrIndexQueueProcessor
 from collective.solr.solr import SolrConnection
-from collective.solr.indexablewrapper import ISolrIndexableObjectWrapper
 
 
 def datehandler(value):
@@ -28,11 +25,9 @@
     schema = None
 
     def index(self, obj, attributes=None):
-        portal = getToolByName(obj, 'portal_url').getPortalObject()
-        wrapper = getMultiAdapter((obj,portal), ISolrIndexableObjectWrapper)
         data, marker = {}, []
         for name, field in self.getSchema().items():
-            value = getattr(wrapper, name, marker)
+            value = getattr(obj, name, marker)
             if value is marker:
                 continue
             if callable(value):
@@ -40,6 +35,7 @@
             if handlers.has_key(field.class_):
                 value = handlers[field.class_](value)
             data[name] = value
+        self.prepareData(data)
         self.getConnection().add(**data)
 
     def reindex(self, obj, attributes=None):
@@ -56,6 +52,13 @@
 
     # helper methods
 
+    def prepareData(self, data):
+        """ modify data according to solr specifics, i.e. replace ':' by '$'
+            for "allowedRolesAndUsers" etc """ 
+        allowed = data.get('allowedRolesAndUsers', None)
+        if allowed is not None:
+            data['allowedRolesAndUsers'] = [r.replace(':','$') for r in allowed]
+
     def setHost(self, host='localhost', port=8983, base='/solr'):
         """ set connection parameters """
         self.host = host
