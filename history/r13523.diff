Index: collective.solr/trunk/collective/solr/tests/test_indexer.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_indexer.py	(revision 13522)
+++ collective.solr/trunk/collective/solr/tests/test_indexer.py	(revision 13523)
@@ -1,4 +1,5 @@
 from unittest import TestCase, TestSuite, makeSuite, main
+from DateTime import DateTime
 
 from collective.solr.indexer import SolrIndexQueueProcessor
 from collective.solr.tests.test_solr import fakehttp
@@ -56,6 +57,17 @@
         self.assertEqual(output.find('price'), -1, '"price" data found?')
         self.assertEqual(output.find('42'), -1, '"price" data found?')
 
+    def testDateIndexing(self):
+        proc = self.setupProcessor()
+        foo = Foo(id='zeidler', name='andi', cat='nerd', timestamp=DateTime('May 11 1972 03:45 GMT'))
+        output = []
+        response = getData('add_response.txt')
+        fakehttp(proc.getConnection(), response, output)    # fake add response
+        proc.index(foo)
+        output = ''.join(output).replace('\r', '')
+        required = '<field name="timestamp">1972-05-11T03:45:00.000Z</field>'
+        self.assert_(output.find(required) > 0, '"date" data not found')
+
     def testReindexObject(self):
         proc = self.setupProcessor()
         output = []
Index: collective.solr/trunk/collective/solr/indexer.py
===================================================================
--- collective.solr/trunk/collective/solr/indexer.py	(revision 13522)
+++ collective.solr/trunk/collective/solr/indexer.py	(revision 13523)
@@ -11,13 +11,13 @@
     # XXX check the enfold.solr implementation
     if isinstance(value, DateTime):
         value = value.toZone('UTC')
-        value = '%04d-%02d-%02dT%02d:%02d:%02dZ' % ( value.year()
+        value = '%04d-%02d-%02dT%02d:%02d:%06.3fZ' % ( value.year()
                                                    , value.month()
                                                    , value.day()
                                                    , value.hour()
                                                    , value.minute()
                                                    , value.second())
-    return ''
+    return value
 
 
 handlers = {'solr.DateField': datehandler}
