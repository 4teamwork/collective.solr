Index: collective.solr/trunk/collective/solr/parser.py
===================================================================
--- collective.solr/trunk/collective/solr/parser.py	(revision 13434)
+++ collective.solr/trunk/collective/solr/parser.py	(revision 13435)
@@ -1,23 +1,22 @@
 from elementtree.ElementTree import iterparse
 from StringIO import StringIO
 from DateTime import DateTime
-from types import ListType, DictType
 
 
 # unmarshallers for basic types
 unmarshallers = {
-    'int': lambda x: int(x.text),
-    'float': lambda x: float(x.text),
-    'bool': lambda x: x.text == 'true',
-    'str': lambda x: x.text or '',
-    'date': lambda x: DateTime(x.text),
+    'int': int,
+    'float': float,
+    'bool': lambda x: x == 'true',
+    'str': lambda x: x or '',
+    'date': DateTime,
 }
 
 def setter(item, name, value):
     """ sets the named value on item respecting its type """
-    if type(item) == ListType:
+    if isinstance(item, list):
         item.append(value)      # name is ignored for lists
-    elif type(item) == DictType:
+    elif isinstance(item, dict):
         item[name] = value
     else:                       # object is assumed...
         setattr(item, name, value)
@@ -32,9 +31,9 @@
 
     # nesting tags along with their factories
     nested = {
-        'arr': lambda: [],
-        'lst': lambda: {},
-        'result': lambda: [],
+        'arr': list,
+        'lst': dict,
+        'result': list,
         'doc': SolrFlare,
     }
 
@@ -55,7 +54,7 @@
                 if nested(tag):
                     stack.append(self.nested[tag]())
                 elif unmarshallers.has_key(tag):
-                    data = unmarshallers[tag](elem)
+                    data = unmarshallers[tag](elem.text)
                     setter(stack[-1], elem.get('name'), data)
             elif action == 'end':
                 if nested(tag):
