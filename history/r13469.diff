Index: collective.solr/trunk/collective/solr/tests/test_parser.py
===================================================================
--- collective.solr/trunk/collective/solr/tests/test_parser.py	(revision 13468)
+++ collective.solr/trunk/collective/solr/tests/test_parser.py	(revision 13469)
@@ -83,24 +83,22 @@
 
     def testParseConfig(self):
         schema = SolrSchema(getData('schema.xml'))
-        fields = schema
-        self.assertEqual(len(fields), 17) # 17 fields defined in schema.xml
-        self.assertEqual(fields['id'].type, 'string')
-        self.assertEqual(fields['id'].class_, 'solr.StrField')
-        self.assertEqual(fields['id'].required, 'true')
-        self.assertEqual(fields['id'].omitNorms, 'true')
-        self.assertEqual(fields['cat'].class_, 'solr.TextField')
-        self.assertEqual(fields['cat'].multiValued, 'true')        
-        self.assertEqual(fields['sku'].positionIncrementGap, '100')
-        self.assertEqual(fields['cat'].multiValued, 'true')
-        self.assertEqual(fields['cat'].termVectors, 'true')        
-        self.assertEqual(fields['features'].multiValued, 'true')
-        self.assertEqual(fields['weight'].class_, 'solr.SortableFloatField')
-        self.assertEqual(fields['popularity'].class_, 'solr.SortableIntField')
-        self.assertEqual(fields['inStock'].class_, 'solr.BoolField')
-        self.assertEqual(fields['timestamp'].class_, 'solr.DateField')
-        self.assertEqual(fields['timestamp'].default, 'NOW')
-        self.assertEqual(fields['timestamp'].multiValued, 'false')
+        self.assertEqual(len(schema), 17) # 17 fields defined in schema.xml
+        self.assertEqual(schema['id'].type, 'string')
+        self.assertEqual(schema['id'].class_, 'solr.StrField')
+        self.assertEqual(schema['id'].required, 'true')
+        self.assertEqual(schema['id'].omitNorms, 'true')
+        self.assertEqual(schema['cat'].class_, 'solr.TextField')
+        self.assertEqual(schema['cat'].multiValued, 'true')        
+        self.assertEqual(schema['cat'].termVectors, 'true')        
+        self.assertEqual(schema['sku'].positionIncrementGap, '100')
+        self.assertEqual(schema['features'].multiValued, 'true')
+        self.assertEqual(schema['weight'].class_, 'solr.SortableFloatField')
+        self.assertEqual(schema['popularity'].class_, 'solr.SortableIntField')
+        self.assertEqual(schema['inStock'].class_, 'solr.BoolField')
+        self.assertEqual(schema['timestamp'].class_, 'solr.DateField')
+        self.assertEqual(schema['timestamp'].default, 'NOW')
+        self.assertEqual(schema['timestamp'].multiValued, 'false')
 
 
 def test_suite():
